name: C/C++ CI

on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }} as ${{ matrix.license }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        license: ['LGPL2.1', 'LGPL3', 'GPL2', 'GPL3']
        include: 
        - license: 'LGPL2.1'
          ffmpeg_conf: ''
        - license: 'LGPL3'
          ffmpeg_conf: '--enable-libvo_amrwbenc --enable-libopencore_amrnb --enable-libopencore_amrwb --enable-liblensfun --enable-version3'
        - license: 'GPL2'
          ffmpeg_conf: '--enable-gpl'
        - license: 'GPL3'
          ffmpeg_conf: '--enable-libvo_amrwbenc --enable-libopencore_amrnb --enable-libopencore_amrwb --enable-liblensfun --enable-gpl  --enable-version3'
    timeout-minutes: 60
    
    steps:
    - uses: actions/checkout@v2
      with:
       submodules: recursive
    - name: Install deps
      run: sudo apt update -qq && sudo apt -y install autoconf automake build-essential cmake git-core libass-dev libfreetype6-dev libgnutls28-dev libsdl2-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev pkg-config texinfo wget yasm zlib1g-dev libsdl2-dev libva-dev libvdpau-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev nasm libx264-dev libx265-dev libnuma-dev libvpx-dev libfdk-aac-dev libmp3lame-dev libopus-dev libchromaprint-dev ladspa-sdk liblilv-dev libbluray-dev libbs2b-dev libcaca-dev libcodec2-dev libdc1394-22-dev flite1-dev libgme-dev libgsm1-dev liblensfun-dev libopencore-amrnb-dev libopencore-amrwb-dev libopenjp2-7-dev libopenmpt-dev libshine-dev libsnappy-dev libsoxr-dev libssh-gcrypt-dev libspeex-dev libtheora-dev libtwolame-dev libvo-amrwbenc-dev libwavpack-dev libzmq3-dev libzvbi-dev libopenal-dev ocl-icd-opencl-dev libomxil-bellagio-dev libjack-jackd2-dev
    - name: Configure ffmpeg
      run: PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" --pkg-config-flags="--static" --extra-cflags="-I$HOME/ffmpeg_build/include" --extra-ldflags="-L$HOME/ffmpeg_build/lib" --extra-libs="-lpthread -lm" --bindir="$HOME/bin" --enable-avresample --disable-filter=resample --enable-ladspa --enable-libass --enable-libbluray --enable-libbs2b --enable-libcaca  --enable-libcodec2 --enable-libflite --enable-libfontconfig --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libjack --enable-libmp3lame --enable-libopenjpeg --enable-libopenmpt --enable-libopus --enable-libpulse --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libvorbis --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libxml2 --enable-libzmq --enable-libzvbi --enable-lv2 --enable-omx --enable-openal --enable-opencl --enable-opengl --enable-sdl2 --enable-libdc1394 --enable-libdrm --enable-chromaprint --disable-doc --disable-encoders --disable-muxers --disable-devices --disable-filters ${{ matrix.ffmpeg_conf }}
      working-directory: ./ffmpeg
    - name: Make ffmpeg
      run: PATH="$HOME/bin:$PATH" make -j4
      working-directory: ./ffmpeg
    - name: Make install ffmpeg
      run: make install
      working-directory: ./ffmpeg
    - name: List codecs
      run: ~/bin/ffmpeg -codecs | grep "D.A... " | wc -l
